<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>送别</title>
      <link href="/2022/05/27/song-bie/"/>
      <url>/2022/05/27/song-bie/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fss2.meipian.me%2Fusers%2F33440042%2F633decd3a7cd4a218f47bd285e40d05d.jpg%3Fmeipian-raw%2Fbucket%2Fivwen%2Fkey%2FdXNlcnMvMzM0NDAwNDIvNjMzZGVjZDNhN2NkNGEyMThmNDdiZDI4NWU0MGQwNWQuanBn%2Fsign%2Fa785888a392f501860ea0f3aed9dd7ed.jpg&amp;refer=http%3A%2F%2Fss2.meipian.me&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=auto?sec=1656173110&amp;t=2c5a59d2d7d05da0b563bcd566abcb92"></p><blockquote><p>1945年，李叔同作，4年后出家，法号“弘一法师”</p></blockquote><h1 id="送别"><a href="#送别" class="headerlink" title="送别"></a>送别</h1><p>长亭外，古道边，芳草碧连天</p><p>晚风拂柳笛声残，夕阳山外山</p><p>天之涯，地之角，知交半零落</p><p>一壶浊酒尽余欢，今宵别梦寒</p><hr><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fp9.itc.cn%2Fimages01%2F20200523%2Fb9a71f046be94dfc9bb838caee2bf215.JPG&amp;refer=http%3A%2F%2Fp9.itc.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=auto?sec=1656173078&amp;t=6b0b54edf3070b4dd34f79b827fd70e6"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 诗歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态规划</title>
      <link href="/2022/05/26/dp/"/>
      <url>/2022/05/26/dp/</url>
      
        <content type="html"><![CDATA[<h1 id="mathcal-DP"><a href="#mathcal-DP" class="headerlink" title="$\mathcal{DP}$"></a>$\mathcal{DP}$</h1><p>循环顺序：阶段、状态、决策；</p><p>时间复杂度：状态数量 $\times$ 状态转移的计算量；</p><h2 id="一、线性DP"><a href="#一、线性DP" class="headerlink" title="一、线性DP"></a>一、线性DP</h2><h3 id="1-数字三角形模型"><a href="#1-数字三角形模型" class="headerlink" title="1. 数字三角形模型"></a>1. 数字三角形模型</h3><blockquote><p>　　　　　　　　　　　　　　　　　　７<br>　　　　　　　　　　　　　　　　　３　８<br>　　　　　　　　　　　　　　　　８　１　０<br>　　　　　　　　　　　　　　　２　７　４　４<br>　　　　　　　　　　　　　　４　５　２　６　５</p><p>给定一个数字三角形，如上，在这个三角形中寻找一条从顶部到底边的路径，使得路径上所经过的数字之和最大。路径上的每一步都只能往左下或右下走。求出这个最大和。</p></blockquote><h3 id="2-最长上升子序列模型"><a href="#2-最长上升子序列模型" class="headerlink" title="2. 最长上升子序列模型"></a>2. 最长上升子序列模型</h3><blockquote><p>186 186 150 200 160 130 197 220</p><p>1.上升；2.下降；3.先上升后下降；</p></blockquote><ul><li>反链：为一个点的集合，其中所有点两两不可达；</li></ul><h3 id="3-背包"><a href="#3-背包" class="headerlink" title="3. 背包"></a>3. 背包</h3><h4 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h4><p>每个物品只有一个</p><ul><li>求<code>max</code> 给不相干的初始化为<code>-inf</code>;</li><li>求<code>min</code> 初始化为<code>inf</code>;</li></ul><p>==优化滚动数组== </p><img src="https://gitee.com/csJager/picture__bed/raw/master/屏幕截图 2021-12-31 221003.png" alt="屏幕截图 2021-12-31 221003" style="zoom: 150%;"><p>==优化成一维== </p><img src="https://gitee.com/csJager/picture__bed/raw/master/屏幕截图 2021-12-31 224701.png" alt="屏幕截图 2021-12-31 224701" style="zoom: 67%;"><img src="https://gitee.com/csJager/picture__bed/raw/master/屏幕截图 2021-12-31 2245480.png" alt="屏幕截图 2021-12-31 2245480" style="zoom: 67%;"><blockquote><p>01背包始终需要从<code>i-1</code>阶段转移到<code>i</code>阶段！</p><p>求方案数只需把 max 换成 + 就🆗了</p></blockquote><h4 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h4><p>每个物品无限个</p><p>$f[i][j]=\left{ \begin{matrix}f[i-1][j]，未选过第i个物品\ \ \ \f[i][j-v[i]]，从第i个物品中选一个 \end{matrix} \right.$ </p><p>注意到第二步是在当前阶段中转移，优化到一维后不需要倒序</p><blockquote><p><code>memset(f, 0xcf, sizeof f)</code> 置为-INF（cause溢出了 int 范围）</p></blockquote><h4 id="多重背包"><a href="#多重背包" class="headerlink" title="多重背包"></a>多重背包</h4><p>每个物品有<code>Ci</code>个</p><ol><li>==直接拆分法==</li></ol><p>将每种物品看作独立的<code>Ci</code>个物品，转化为 $\sum_{i=1}^NC_i$ 个物品的<code>0/1</code> 背包问题；</p><p>时间复杂度：$\mathcal{O(M*\sum_{i=1}^N C_i)}$ ；</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">for(int i=1; i&lt;=n; i++)    for(int j=1; j&lt;=c[i]; j++)        for(int k=m; k&gt;=v[i]; k--)            f[k] = max(f[k], f[k-v[i]]+w[i]);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>==二进制拆分法==</li></ol><p>把每种物品拆成 $\log C_i$ 个；</p><blockquote><p>从 k 个 2 的整数次幂 $2^0,2^1,2^2,…,2^{k-1}$ 中选出若干个相加，可以表示出 $0\sim 2^k-1$之间的任何整数</p></blockquote><p>假设我们有整数<code>p</code>满足 $2^0+2^1+…+2^p\leq C_i$ ；</p><p>令 $R_i=C_i-2^0-2^1-…-2^p$ ；</p><ul><li>因为 $2^0+2^1+…+2^p=2^{p+1}-1$ ，这些数可以表示 $[0,2^{p+1}-1]$ 范围内的数；</li><li>在此基础上加上 $R_i$ 即可表示出 $[R_i,R_i+2^{p+1}-1]$ 之间的整数，而 $R_i+2^{p+1}-1=C_i$ ,故在此基础上可表示出 $[R_i,C_i]$ 中的任何数；</li></ul><p>由于 $\begin{cases} 2^0+2^1+…+2^p+2^{p+1}&gt;C_i &amp; \ C_i=2^0+2^1+…+2^p+R_i &amp;\end{cases} \Longrightarrow 2^{p+1}&gt;R_i$ ，从而 $R_i\leq2^{p+1}-1$ ，故两个区间没有遗漏的覆盖了 $[0, C_i]$ </p><p>综上，我们可以把数量为 $C_i$ 的第<code>i</code> 种物品拆成 <code>p+2</code> 个物品（0~p有p+1个，再加上 Ri）</p><ol start="3"><li>==单调队列==</li></ol><h4 id="分组背包"><a href="#分组背包" class="headerlink" title="分组背包"></a>分组背包</h4><p>每组物品有很多种，每种一个</p><img src="https://gitee.com/csJager/picture__bed/raw/master/屏幕截图 2022-01-04 205909.png" alt="屏幕截图 2022-01-04 205909" style="zoom:67%;"><h3 id="4-区间DP"><a href="#4-区间DP" class="headerlink" title="4. 区间DP"></a>4. 区间DP</h3><p>阶段：<code>len=r-l+1</code> </p><h2 id="二、状态机"><a href="#二、状态机" class="headerlink" title="二、状态机"></a>二、状态机</h2><p>![](<a href="https://gitee.com/csJager/picture__bed/raw/master/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE">https://gitee.com/csJager/picture__bed/raw/master/屏幕截图</a> 2022-02-04 154523.png)</p><h2 id="三、状态压缩DP"><a href="#三、状态压缩DP" class="headerlink" title="三、状态压缩DP"></a>三、状态压缩DP</h2><h3 id="1-棋盘类"><a href="#1-棋盘类" class="headerlink" title="1. 棋盘类"></a>1. 棋盘类</h3><blockquote><p>终于知道为什么==棋盘左边==是==二进制低位==了：</p><p>因为 遍历二进制数 的方向是从 低—&gt;高</p><p>而我们 观察棋盘 是从 左—&gt;右</p></blockquote><p>第 <code>i-1</code>行状态：a，第<code>i</code>行状态：b；</p><ul><li><p>判断上下两行没有相邻：<code>a&amp;b==0</code>；</p></li><li><p>判断左右没有相邻：<code>a|b</code>不能有相邻的1；</p><blockquote><p>弹幕说也可以判<code>(a&lt;&lt;1&amp;b)==0 &amp;&amp; (a&gt;&gt;1&amp;b)==0</code>，即 是否与右边相邻、是否与左边相邻（左右参考状态 b）</p><p>判断自身是否相邻：<code>x&amp;x&gt;&gt;1</code> ；（来自抽风大佬）</p></blockquote></li></ul><h3 id="2-集合类"><a href="#2-集合类" class="headerlink" title="2. 集合类"></a>2. 集合类</h3><h2 id="四、区间DP"><a href="#四、区间DP" class="headerlink" title="四、区间DP"></a>四、区间DP</h2><blockquote><p>原型题：石子合并</p></blockquote><ol><li>环形区间转化成一条链</li><li>记录方案数</li><li>和高精度结合</li><li>二维区间dp</li></ol><h2 id="五、数位DP"><a href="#五、数位DP" class="headerlink" title="五、数位DP"></a>五、数位DP</h2><p>预处理处用<code>DP</code> </p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">// 模板#include &lt;vector&gt;// int l, r;int f[N][N];void init() // 左分支的预处理，通常用dp实现{}int dp(int n)// 模板{    if(!n) return _;        vector&lt;int&gt; nums;    while(n) nums.push_back(n%B), n/=B;        int res=0;  // 结果    int last=0; //     for(int i=nums.size()-1; i&gt;=0; i--)    {        int x=nums[i];            }    return res;}int main(){    init();        cin&gt;&gt;l&gt;&gt;r;    cout&lt;&lt;dp(r)-dp(l-1)&lt;&lt;endl;        return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://online1.tingclass.net/fy/img/a/accepted1.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="/2022/05/25/my-first-blog/"/>
      <url>/2022/05/25/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么第一行写不了中文"><a href="#为什么第一行写不了中文" class="headerlink" title="为什么第一行写不了中文"></a>为什么第一行写不了中文</h2><p>在第一行一打汉字就会跑到上边，只能先打几个数字然后再在数字后面打汉字</p><p><img src="https://pics3.baidu.com/feed/b64543a98226cffc21050b9675a53e96f603ea16.jpeg?token=eb65b4ab7edae0f82df9bfbad8ecb69d" alt="如果你看到了这行字，说明有个该死的图片挂了"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/24/hello-world/"/>
      <url>/2022/05/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
